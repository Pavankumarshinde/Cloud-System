// Show all databases
show dbs;

// Switch to a specific database
use database_name;

// Show all collections in the current database
show collections;

// Insert a single document into a collection
db.collection_name.insertOne({ key: "value", key2: "value2" });

// Insert multiple documents into a collection
db.collection_name.insertMany([
    { key: "value1", key2: "value2" },
    { key: "value3", key2: "value4" }
]);

// Find all documents in a collection
db.collection_name.find();

// Find documents with a query filter
db.collection_name.find({ key: "value" }); // Match documents where key equals "value"

// Find with multiple conditions
db.collection_name.find({ key1: "value1", key2: "value2" });

// Find with projection to include specific fields
db.collection_name.find({ key: "value" }, { key1: 1, key2: 1 });

// Find with projection to exclude specific fields
db.collection_name.find({ key: "value" }, { key3: 0 });

// Find one document in a collection
db.collection_name.findOne({ key: "value" });

// Update one document in a collection
db.collection_name.updateOne(
    { key: "value" },              // Query to match the document
    { $set: { key: "new_value" } } // Update operation
);

// Update multiple documents in a collection
db.collection_name.updateMany(
    { key: "value" },              // Query to match the documents
    { $set: { key: "new_value" } } // Update operation
);

// Replace one document in a collection
db.collection_name.replaceOne(
    { key: "value" },                       // Query to match the document
    { key1: "new_value1", key2: "new_value2" } // Replacement document
);

// Delete one document from a collection
db.collection_name.deleteOne({ key: "value" });

// Delete multiple documents from a collection
db.collection_name.deleteMany({ key: "value" });

// Count the number of documents matching a query
db.collection_name.countDocuments({ key: "value" });

// Perform an aggregation query
db.collection_name.aggregate([
    { $match: { key: "value" } },         // Match documents
    { $group: { _id: "$key", total: { $sum: 1 } } } // Group and calculate total
]);

// Sort results in ascending order
db.collection_name.find().sort({ key: 1 });

// Sort results in descending order
db.collection_name.find().sort({ key: -1 });

// Limit the number of results
db.collection_name.find().limit(5);

// Skip a specific number of results
db.collection_name.find().skip(5);

// Drop a collection
db.collection_name.drop();

// Drop the current database
db.dropDatabase();
